{"version":3,"file":"invertObject.js","sourceRoot":"","sources":["invertObject.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAC3C,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAE3C,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAA;AAarC,0BAA0B;AAC1B,MAAM,UAAU,YAAY,CAAC,MAAgC;IAC3D,IAAI,IAAI,KAAK,MAAM;QAAE,OAAO,WAAW,CAAC,MAAM,CAAC,CAAA;IAC/C,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC;QAAE,OAAO,WAAW,CAAC,MAAM,CAAC,CAAA;IAErD,OAAO,UAAU,CAAC,MAAM,CAAC,CAAA;AAC3B,CAAC;AAED,eAAe,YAAY,CAAA","sourcesContent":["import { invertArray } from './invertArray'\nimport { invertEmpty } from './invertEmpty'\n\nimport { SwapObject } from '../utils'\n\nimport type {\n  InvertedObject,\n  PossibleJavascriptObject,\n  SwappedObject,\n} from '../@types'\n\n// Function signatures (overloaded)\nexport function invertObject(actual: null): boolean\nexport function invertObject(actual: Array<any>): Array<any>\nexport function invertObject(actual: Object[]): SwappedObject\n\n// Function implementation\nexport function invertObject(actual: PossibleJavascriptObject): InvertedObject {\n  if (null === actual) return invertEmpty(actual)\n  if (Array.isArray(actual)) return invertArray(actual)\n\n  return SwapObject(actual)\n}\n\nexport default invertObject\n"]}